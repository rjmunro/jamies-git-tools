#!/bin/bash

# git-rebase-all
# Copyright (c) 2025 Robert (Jamie) Munro
# Licensed under the MIT License
#
# Usage: git rebase-all [--include-pushed] [base-branch]
#
# Part of Jamie's Git Tools: https://github.com/rjmunro/jamies-git-tools

SKIP_PUSHED=true
BASE_BRANCH=""

# List of possible default base branches in order
DEFAULT_BASE_BRANCHES=("develop" "origin/develop" "main" "origin/main" "master" "origin/master")

# Handle script arguments
for arg in "$@"; do
  if [ "$arg" == "--include-pushed" ]; then
    SKIP_PUSHED=false
  else
    BASE_BRANCH="$arg"
  fi
done

# If no base branch specified, find the first existing one
if [ -z "$BASE_BRANCH" ]; then
  for candidate in "${DEFAULT_BASE_BRANCHES[@]}"; do
    if git show-ref --verify --quiet "refs/heads/$candidate" || git show-ref --verify --quiet "refs/remotes/$candidate"; then
      BASE_BRANCH="$candidate"
      break
    fi
  done
fi

if [ -z "$BASE_BRANCH" ]; then
  echo "Error: Could not find a suitable base branch." >&2
  exit 1
fi

echo "# Listing tip branches (base: $BASE_BRANCH; skip pushed: $SKIP_PUSHED)"

git branch --no-contains "$BASE_BRANCH" --sort=-committerdate | while read branch; do
  # Trim possible whitespace and "* " around the branch name
  branch=$(echo "$branch" | sed 's/^\* //' | xargs)
  if [ -z "$branch" ]; then
    continue
  fi

  # Skip remote-tracking branches
  if [[ "$branch" == "remotes/"* ]]; then
    continue
  fi

  # Skip branches that are fully pushed if the flag is enabled
  if [ "$SKIP_PUSHED" = true ]; then
    # 1. Check if a remote branch with the same name exists
    remote_ref=$(git for-each-ref --format='%(refname)' refs/remotes/*/"$branch" | head -n 1)

    if [ -n "$remote_ref" ]; then
      # 2. Check if the local branch is fully synced with that remote branch
      # This is true if the remote ref is the same commit as the local branch
      if git diff --quiet "$remote_ref" "$branch" 2>/dev/null; then
        echo "# Skipping fully pushed branch: $branch (synced with $remote_ref)"
        continue
      fi
    # If there is no remote ref with the same name, the branch is likely local-only
    fi
  fi

  # Check if this is a tip branch (not contained by other branches)
  if [ "$(git branch --contains "$branch" | wc -l)" -eq 1 ]; then
    echo "git rebase '$BASE_BRANCH' '$branch' || git rebase --abort"
  fi
done

#!/bin/bash

# git-clean-whitespace
# Copyright (c) 2025 Robert (Jamie) Munro
# Licensed under the MIT License
#
# Clean trailing whitespace from files that have changed
# Usage: git-clean-whitespace [filename]
# If filename is provided, only process that file. Otherwise process all staged files.
#
# Part of Jamie's Git Tools: https://github.com/rjmunro/jamies-git-tools

set -eu

print_help() {
  echo "Usage: $0 [filename]"
  echo ""
  echo "Remove whitespace-only changes from the staging area."
  echo ""
  echo "Arguments:"
  echo "  filename    Optional. Only process the specified file."
  echo "              If not provided, processes all staged files."
  echo ""
  echo "Examples:"
  echo "  $0                    # Clean whitespace from all staged files"
  echo "  $0 src/main.js        # Clean whitespace only from src/main.js"
  echo "  $0 --help             # Show this help"
  exit 0
}

# Parse arguments
if [[ $# -gt 0 ]]; then
  case "$1" in
    --help|-h)
      print_help
      ;;
    -*)
      echo "Unknown option: $1"
      print_help
      ;;
    *)
      TARGET_FILE="$1"
      ;;
  esac
fi

# Get git repository information
ORIGINAL_PWD="$(pwd)"
GIT_ROOT="$(git rev-parse --show-toplevel)"

# Change to git root directory for git commands to work properly
cd "$GIT_ROOT"

# Convert target file path to be relative to git root
if [[ -n "${TARGET_FILE:-}" ]]; then
  # Convert the target file path to be relative to git root
  if [[ "$TARGET_FILE" = /* ]]; then
    # Absolute path - convert to relative to git root
    if command -v realpath >/dev/null 2>&1; then
      TARGET_FILE_GITREL="$(realpath --relative-to="$GIT_ROOT" "$TARGET_FILE" 2>/dev/null || echo "$TARGET_FILE")"
    else
      # Fallback for systems without realpath
      TARGET_FILE_GITREL="${TARGET_FILE#$GIT_ROOT/}"
      # If the file doesn't start with git root, it might be outside the repo
      if [[ "$TARGET_FILE_GITREL" = "$TARGET_FILE" ]]; then
        echo "Error: File '$TARGET_FILE' appears to be outside the git repository"
        exit 1
      fi
    fi
  else
    # Relative path - convert from original PWD to git root relative
    if command -v realpath >/dev/null 2>&1; then
      if [[ -f "$ORIGINAL_PWD/$TARGET_FILE" ]] || [[ -f "$TARGET_FILE" ]]; then
        TARGET_FILE_GITREL="$(realpath --relative-to="$GIT_ROOT" "$ORIGINAL_PWD/$TARGET_FILE" 2>/dev/null || echo "$TARGET_FILE")"
      else
        # File might not exist yet, try to construct the path
        TARGET_FILE_GITREL="$(realpath --relative-to="$GIT_ROOT" "$ORIGINAL_PWD" 2>/dev/null)/$TARGET_FILE"
      fi
    else
      # Fallback for systems without realpath
      # Get relative path from git root to original PWD
      ORIGINAL_PWD_REL="${ORIGINAL_PWD#$GIT_ROOT/}"
      if [[ "$ORIGINAL_PWD_REL" = "$ORIGINAL_PWD" ]]; then
        # We're not in a subdirectory of git root
        TARGET_FILE_GITREL="$TARGET_FILE"
      else
        TARGET_FILE_GITREL="$ORIGINAL_PWD_REL/$TARGET_FILE"
      fi
    fi
    # Clean up any leading "./" 
    TARGET_FILE_GITREL="${TARGET_FILE_GITREL#./}"
  fi

  # Verify the file is actually staged
  if ! git diff --cached --name-only | grep -qF "$TARGET_FILE_GITREL"; then
    echo "File '${TARGET_FILE}' (git path: ${TARGET_FILE_GITREL}) is not staged for commit."
    echo "Staged files are:"
    git diff --cached --name-only | sed 's/^/  /'
    exit 1
  fi

  echo "Processing file: $TARGET_FILE_GITREL"
fi

# Remove changes from the index if they are only whitespace
# Based on answer to this question
# http://stackoverflow.com/questions/1751612/git-tool-to-remove-lines-from-staging-if-they-consist-only-of-changes-in-whitespa

if [[ -n "${TARGET_FILE_GITREL:-}" ]]; then
  # Process only the specified file
  clean=$(git diff --cached -w -R -- "${TARGET_FILE_GITREL}")
  git apply --cached <(git diff --cached -R -- "${TARGET_FILE_GITREL}")
  echo "$clean" | git apply --cached -R -
else
  # Process all staged files (original behavior)
  clean=$(git diff --cached -w -R)
  git apply --cached <(git diff --cached -R)
  echo "$clean" | git apply --cached -R -
fi

clean=

#!/usr/bin/env bash
#
# git-branch-space-report.sh
#
# Estimate how much unique data each branch keeps alive compared to main.
# Run this inside your repo. Requires awk, sort, and git.

set -euo pipefail

# You can change this if your main branch is named differently
BASE_BRANCH="origin/main"

# Make sure base branch exists
if ! git rev-parse --verify "$BASE_BRANCH" >/dev/null 2>&1; then
    echo "Error: base branch '$BASE_BRANCH' not found."
    exit 1
fi

echo "Analyzing branches (base: $BASE_BRANCH)..."
echo

# Header
printf "%-30s %15s\n" "Branch" "Unique Size (MB)"
echo "-------------------------------------------------------------"

# Loop over branches
git for-each-ref --format='%(refname:short)' refs/heads/ | while read -r branch; do
    if [ "$branch" = "$BASE_BRANCH" ]; then
        continue
    fi

    # Sum blob sizes that are in branch but not in base
    size_bytes=$(git rev-list --objects "$BASE_BRANCH..$branch" |
        git cat-file --batch-check='%(objecttype) %(objectname) %(objectsize)' |
        awk '/^blob/ {sum += $3} END {print sum+0}')

    size_mb=$(awk -v s="$size_bytes" 'BEGIN {printf "%.2f", s/1024/1024}')

    printf "%-30s %15s\n" "$branch" "$size_mb"
done | sort -k2 -nr
